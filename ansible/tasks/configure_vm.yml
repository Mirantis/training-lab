- name: "Build hosts file"
  lineinfile:
    dest: /etc/hosts
    regexp: '{{ hostvars[item].ansible_hostname }}'
    line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ hostvars[item].ansible_hostname }}"
  when: hostvars[item].ansible_default_ipv4.address is defined and hostvars[item].ansible_hostname is defined
  loop: "{{ ansible_play_batch }}"

- name: Update all packages
  apt:
    upgrade: dist
    update_cache: yes

- name: Install packages
  apt:
    name: "{{ item }}"
  loop: "{{ packages }}"

- name: Install packages for kvm01
  apt:
    name: "{{ item }}"
  loop: "{{ kvm01_packages }}"
  when: ansible_hostname is search('kvm01')


######################################################
# Configure networking and libvirt
######################################################
- name: Set IP forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes

- name: Configure libvirt daemon
  blockinfile:
    path: /etc/libvirt/libvirtd.conf
    block: |
      listen_tls = 0
      listen_tcp = 1
      listen_addr = "0.0.0.0"
      auth_tcp = "none"
  notify:
    - restart libvirt

- name: Configure libvirt daemon
  lineinfile:
    path: /etc/default/libvirt-bin
    regexp: '^libvirtd_opts'
    line: libvirtd_opts="--listen --config /etc/libvirt/libvirtd.conf"
  notify:
    - restart libvirt

- name: Add vxlan configuration to /etc/network/interfaces.d/60-vxlan-bridge.cfg
  template:
    dest: /etc/network/interfaces.d/60-vxlan-bridge.cfg
    src: templates/60-vxlan-bridge.cfg.j2
  notify: restart networking


######################################################
# Add student account
######################################################
- name: Add user student
  user:
    name: "{{ default_student_account_name }}"
    comment: Student account
    groups: admin,libvirtd,kvm
    password: "{{ default_student_account_password | password_hash('sha512') }}"
    shell: /bin/bash
    update_password: on_create

- name: Set authorized key for {{ default_student_account_name }} account
  authorized_key:
    user: "{{ default_student_account_name }}"
    key: "{{ lookup('file', ssh_public_key) }}"

- name: Add {{ default_student_account_name }} account to sudoers to skip password questions
  blockinfile:
    path: /etc/sudoers.d/80-student-account
    create:  yes
    block: |
      {{ default_student_account_name }} ALL=(ALL) NOPASSWD:ALL

- name: Allow user student to log in using password via ssh
  blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      Match User {{ default_student_account_name }}
        PasswordAuthentication yes
  notify: restart sshd


######################################################
# Set all passwords and ssh keys
######################################################
- block:
  - name: Generate private/public ssh keys for access inside all VMs
    command: ssh-keygen -t rsa -b 2048 -f /root/.ssh/id_rsa -N "" -q
    args:
      creates: /root/.ssh/id_rsa

  - name: Get generated private ssh key for access inside all VMs
    command: cat /root/.ssh/id_rsa
    register: generated_ssh_private_key
    changed_when: false

  - name: Get generated public ssh key for access inside all VMs
    command: cat /root/.ssh/id_rsa.pub
    register: generated_ssh_public_key
    changed_when: false
  run_once: true

- name: Add generated ssh public key to authorized key for all users
  authorized_key:
    user: "{{ item }}"
    key: "{{ generated_ssh_public_key.stdout }}"
  loop:
    - "{{ default_username }}"
    - root
    - "{{ default_student_account_name }}"

- name: Add generated ssh private key to all users $HOME/.ssh/id_rsa
  copy:
    content: "{{ generated_ssh_private_key.stdout }}"
    dest: "{{ item }}/.ssh/id_rsa"
    mode: 0600
    owner: "{{ item | basename }}"
    group: "{{ item | basename }}"
  loop:
    - "/home/{{ default_username }}"
    - /root
    - "/home/{{ default_student_account_name }}"

- name: Set passwords for all users (root, student, ubuntu)
  user:
    name: "{{ item.name }}"
    password: "{{ item.password | password_hash('sha512') }}"
  loop:
    - name: "{{ default_username }}"
      password: "{{ default_username_password }}"
    - name: root
      password: "{{ root_passwrod }}"
    - name: "{{ default_student_account_name }}"
      password: "{{ default_student_account_password }}"
  changed_when: false

- name: Add ssh key ({{ ssh_public_key }}) to authorized key for all users
  authorized_key:
    user: "{{ item }}"
    key: "{{ lookup('file', ssh_public_key) }}"
  loop:
    - "{{ default_username }}"
    - root
    - "{{ default_student_account_name }}"

- name: Run all notify sections
  meta: flush_handlers

- name: Check if reboot is necessary by locatimng the /var/run/reboot-required
  stat:
    path: /var/run/reboot-required
  register: reboot_required

- name: Reboot check
  block:
  - name: Reboot machine
    shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
    async: 1
    poll: 0
    ignore_errors: true

  - name: Wait for system to boot up
    wait_for:
      host: "{{ ansible_host }}"
      port: "{{ ansible_port | default('22') }}"
      search_regex: OpenSSH
      delay: 10
    connection: local
    become: False
  when: reboot_required.stat.exists
