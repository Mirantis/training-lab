- name: Add ssh key to authorized key for root
  authorized_key:
    user: root
    key: "{{ lookup('file', ssh_public_key) }}"

- name: "Build hosts file"
  lineinfile:
    dest: /etc/hosts
    regexp: '{{ hostvars[item].ansible_hostname }}'
    line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ hostvars[item].ansible_hostname }}"
  when: hostvars[item].ansible_default_ipv4.address is defined and hostvars[item].ansible_hostname is defined
  loop: "{{ ansible_play_batch }}"

- name: Update all packages
  apt:
    upgrade: dist
    update_cache: yes

- name: Check if reboot is necessery to boot to the latest kernel
  shell: if [ "$(ls -t -1 /boot/vmlinuz-* | head -1 | sed 's@.*/vmlinuz-\(.*\)@\1@')" != "$(uname -r)" ]; then echo reboot; fi
  changed_when: false
  register: latest_kernel_check

- block:
  - name: Reboot machine to boot to latest kernel
    shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
    async: 1
    poll: 0
    ignore_errors: true

  - name: Wait for system to boot up
    wait_for:
      host: "{{ ansible_host }}"
      port: "{{ ansible_port | default('22') }}"
      search_regex: OpenSSH
      delay: 10
    connection: local
    become: False
  when: latest_kernel_check.stdout is search("reboot")

- name: Install packages
  apt:
    name: "{{ item }}"
  loop: "{{ packages }}"

- name: Set IP forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes

- name: Configure libvirt daemon
  blockinfile:
    path: /etc/libvirt/libvirtd.conf
    block: |
      listen_tls = 0
      listen_tcp = 1
      listen_addr = "0.0.0.0"
      auth_tcp = "none"
  notify:
    - restart libvirt

- name: Configure libvirt daemon
  lineinfile:
    path: /etc/default/libvirt-bin
    regexp: '^libvirtd_opts'
    line: libvirtd_opts="--listen --config /etc/libvirt/libvirtd.conf"
  notify:
    - restart libvirt



